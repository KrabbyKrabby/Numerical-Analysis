# -*- coding: utf-8 -*-
"""Lab4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1j5ATABuWORC8tQQ4lgIr52oc8G-7d7UM
"""

from os import XATTR_REPLACE
import numpy as np
import time
import matplotlib.pyplot as plt

n = int(input())

mat = []
for i in range(n):
  row = []
  for j in range(n):
    x = float(input())
    row.append(x)
  mat.append(row)

b = []
X = []
for i in range(n):
  temp = []
  zero = []
  x = float(input())
  temp.append(x)
  zero.append(float(0))
  b.append(temp)
  X.append(zero)

temp1 = []
temp2 = []
temp3 = []

def jacobi_iter(X):
  iter = 1
  timeinit = time.time()
  while iter <= 50:
    AE = []
    total_ae = 0
    for i in range(n):
      bi = b[i][0]
      sum = bi
      for j in range(n):
        if i != j:
          sum = sum + -1*mat[i][j]*X[j][0]
      sum = sum/mat[i][i]
      total_ae = total_ae + abs( X[i][0]-sum )
      AE.append( abs( X[i][0]-sum ) )
      X[i][0] = sum
    temp1.append(iter)
    temp2.append(total_ae)
    tym = time.time()
    temp3.append( tym-timeinit )
    iter = iter + 1
    print("X = ",X)
    print("Approximate Error: ", AE)

  x = np.array(temp1)
  y = np.array(temp2)
  z = np.array(temp3)

  plt.plot(x,y)
  plt.xlabel("Iteration")
  plt.ylabel("AE")
  plt.show()

  plt.plot(x,z)
  plt.xlabel("Iteration")
  plt.ylabel("Cumulative Runtime")
  plt.show()



temp4 = []
temp5 = []
temp6 = []


def jacobi_matrix(X):
  iter = 1;
  L = np.tril(mat,-1)
  U = np.triu(mat,1)
  D = np.subtract(mat,L)
  D = np.subtract(D,U)
  D_inv = np.linalg.inv(D)
  val = np.add( np.negative(U),np.negative(L) )
  inittime = time.time()

  while iter <= 50:
    AE = []
    sum = 0
    temp = np.dot( val,X )
    temp = np.add(temp,b)
    temp = np.dot( D_inv,temp )
    tym = time.time()

    for i in range(n):
      AE.append( abs( X[i][0]-temp[i][0] ) )
      sum = sum + abs( X[i][0]-temp[i][0] )
    print("X = ",X)
    print("Approximation Error : ",AE)
    X = temp
    temp4.append(iter);
    temp5.append(sum)
    temp6.append(tym-inittime)
    iter = iter+1

  x = np.array(temp4)
  y = np.array(temp5)
  z = np.array(temp6)

  plt.plot(x,y)
  plt.xlabel("Iteration")
  plt.ylabel("AE")
  plt.show()

  plt.plot(x,z)
  plt.xlabel("Iteration")
  plt.ylabel("Cumulative Runtime")
  plt.show()


jacobi_iter(X)

X = []
for i in range(n):
  zero = []
  zero.append(float(0))
  X.append(zero)

jacobi_matrix(X)

a = np.array(temp4)
b = np.array(temp3)
c = np.array(temp6)
plt.plot(a,b)
plt.plot(a,c,'-.')

plt.xlabel("Iteration")
plt.ylabel("Cumulative Runtime")

plt.show()